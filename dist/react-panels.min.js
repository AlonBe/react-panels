var Panel=React.createClass({displayName:"Panel",defaultProps:{icon:"",title:"",name:"",theme:"default",bordered:!1,opaque:!1,raised:!1,rounded:!1,forceTabs:!1,panelState:"default",buttons:[],getTitleFromActiveTab:!1,displayTabTitles:!0,emptyPanelContent:function(){return React.createElement(PanelContent,{noPadding:!0})},onTabCountChange:!1,onTabCountChanged:!1},applyPreset:function(a){var b=this,c=this.defaultProps;Object.keys(c).forEach(function(d){var e=c[d];"undefined"!=typeof b.props[d]?e=b.props[d]:"undefined"!=typeof a[d]&&(e=a[d]),b.props[d]=e}),"function"==typeof b.props.emptyPanelContent&&(b.props.emptyPanelContent=b.props.emptyPanelContent())},componentDidUpdate:function(a,b){var c=this;Object.keys(c._eventStack).forEach(function(d){var e=c._eventStack[d];e.prevProps=a,e.prevState=b,c._dispatchEvent(d,e,!0),delete c._eventStack[d]})},_dispatchEvent:function(a,b,c){var d;c?(d=this.props["on"+a+"Changed"],"function"==typeof d&&d(this,b)):(this._eventStack[a]=b,d=this.props["on"+a+"Change"],"function"==typeof d&&d(this,b))},getInitialState:function(){var a=this,b=[],c=0;return this.applyPreset(this.props.preset||{}),a._id=Panel._register(a),a._childrenList=[],a._eventStack={},React.Children.forEach(this.props.children,function(d){var e=a._registerPanelContent(d);d.props.active&&(c=e.index),b[e.index]=e}),{tabIndex:c,tabCount:a._childrenList.length,tabList:b,state:a.props.panelState}},getId:function(){return this._id},getName:function(){return String(this.props.name)},setName:function(a){this.setProps({name:String(a)})},close:function(){this.setState({state:"closed"})},restore:function(){this.setState({state:"default"})},collapse:function(){this.setState({state:"collapsed"})},fullscreen:function(){this.setState({state:"fullscreen"})},_getTabCount:function(a){var b=0;a=a||this.state.tabList;for(var c=0;c<this._childrenList.length;++c)null!=this._childrenList[c]&&"visible"==a[c].state&&++b;return this._dispatchEvent("TabCount",{prev:this.state.tabCount,next:b}),b},_getIcon:function(){var a=null;return this.props.icon&&(a=React.createElement("span",{className:"rpanel-icon"},React.createElement("i",{className:this.props.icon}))),a},_getTabs:function(){var a=this,b=-1,c="rpanel-tabs"+(a.state.tabCount>1||a.props.forceTabs?"":" hidden");return React.createElement("ul",{className:c},a._childrenList.map(function(c){if(++b,null==c)return null;var d=Panel._getPanelContent(c),e=a.state.tabList[b],f=d.props.title||"",g=d.props.icon||!1;return"none"!=e.state?React.createElement(PanelTab,{title:f,icon:g,showTitle:a.props.displayTabTitles,index:b,key:b,selected:a.state.tabIndex,state:e.state,_id:e.id,onClick:a.handleClickOnTab}):null}))},_getBody:function(){var a=this,b=-1;return React.createElement("div",{className:"rpanel-body"},a._childrenList.map(function(c){if(++b,null==c)return null;var d=Panel._getPanelContent(c),e=-1!=["visible","locked"].indexOf(a.state.tabList[b].toolbar),f=b==a.state.tabIndex,g=a.state.tabList[b].state;return Panel._setPanelContent(React.createElement(PanelContent,React.__spread({},d.props,{key:b,_index:b,showToolbar:e,display:f,visibility:g}))),Panel._getPanelContent(c)}))},_getButtons:function(){var a=this,b=null,c=0,d=a.getId();if(a.props.buttons.length){b=[];for(var e=a.props.buttons.length;--e>=0;){var f,g=a.props.buttons[e],h="",i={};if("string"==typeof g||"object"==typeof g&&!React.isValidElement(g)){"string"==typeof g?h=g:(h=Object.keys(g)[0],i=g[h]);var j=a._getButton(h,c,i);j&&(f=React.createElement(PanelControl,{preset:j.props.preset,key:c,_panelId:d},j),b.push(f),++c)}else React.isValidElement(g)&&(f=React.createElement(PanelControl,React.__spread({},g.props,{key:c,_panelId:d}),g),b.push(f),++c)}}return b},handleClickOnTab:function(a){this.setActivePanelContent(a.props.index)},handleClickOnClose:function(a){a.preventDefault(),this.close()},handleClickOnCollapse:function(a){var b="collapsed"==this.state.state?"default":"collapsed";a.preventDefault(),this.setState({state:b})},handleClickOnFullscreen:function(a){var b="fullscreen"==this.state.state?"default":"fullscreen";a.preventDefault(),this.setState({state:b})},handleClickOnToggleToolbar:function(a){var b=this.getActivePanelContent();a.preventDefault(),b&&b.toggleToolbar()},dragStart:function(a){this.panelBounds={startLeft:Number(this.props.left)||80,startTop:Number(this.props.top)||100,startPageX:a.pageX,startPageY:a.pageY};try{a.dataTransfer.setData("text/plain","Panel")}catch(b){}window.addEventListener("dragover",this.dragOver)},dragEnd:function(){delete this.panelBounds,window.removeEventListener("dragover",this.dragOver)},dragOver:function(a){if(this.panelBounds){var b=this.panelBounds.startLeft+(a.pageX-this.panelBounds.startPageX),c=this.panelBounds.startTop+(a.pageY-this.panelBounds.startPageY);this.setProps({left:b,top:c})}},render:function(){var a=this._getClasses(),b=this._getIcon(),c=this._getBody(),d=this._getTabs(),e=this._getButtons(),f=this.props.title;try{this.props.getTitleFromActiveTab&&(f+=this._getActivePanelContent().props.title||"")}catch(g){console.trace(),console.error(g)}var h=this.props.draggable?React.createElement("header",{draggable:"true",onDragEnd:this.dragEnd,onDragStart:this.dragStart},b,React.createElement("span",{className:"rpanel-title"},f),e,d):React.createElement("header",null,b,React.createElement("span",{className:"rpanel-title"},f),e,d),i=Number(this.props.left)||80,j=Number(this.props.top)||100,k=String(this.props.width||800)+"px",l="fullscreen"==this.state.state?"inherit":"translate3d("+i+"px, "+j+"px, 0)";return this.props.floating&&this.props.draggable?React.createElement("div",{className:a,style:{WebkitTransform:l,MozTransform:l,msTransform:l,transform:l,width:"fullscreen"==this.state.state?"100%":k}},h,c):React.createElement("div",{className:a},h,c)},_getClasses:function(){var a="rpanel "+this.props.theme;return this.props.rounded?a+=" rounded":(this.props.roundedTop&&(a+=" rounded-top"),this.props.roundedBottom&&(a+=" rounded-bottom")),this.props.rounded&&(a+="top"==this.props.rounded?" rounded-top":"bottom"==this.props.rounded?" rounded-bottom":" rounded"),this.props.bordered&&(a+=" bordered"),this.props.raised&&(a+=" raised"),this.props.floating&&(a+=" floating"),"default"!=this.state.state&&(a+=" rpanel-state-"+this.state.state),a},_getButton:function(a,b,c){var d=this,e={};switch(a){case"close":e={onClick:this.handleClickOnClose};break;case"collapse":e={identifier:"collapse",icon:"fa fa-minus",title:"Toggle panel",active:function(a){return"collapsed"==a.getPanel().state.state},hiddenOnFullscreen:!0,onClick:this.handleClickOnCollapse};break;case"fullscreen":e={identifier:"fullscreen",icon:"fa fa-expand",title:"Toggle fullscreen",active:function(a){return"fullscreen"==a.getPanel().state.state},onClick:this.handleClickOnFullscreen};break;case"toggleToolbar":e={identifier:"toggleToolbar",icon:"fa fa-pencil-square-o",title:"Toggle toolbar of active tab",active:function(){return-1!=["visible","locked"].indexOf(d._getActivePanelContent().props.toolbarState)},disabled:function(){return-1!=["locked","none"].indexOf(d._getActivePanelContent().props.toolbarState)},hiddenOnFullscreen:!0,onClick:this.handleClickOnToggleToolbar};break;case"custom":break;default:throw new Error("Predefined button '"+a+"' not found.")}return Object.keys(c||{}).forEach(function(a){e[a]=c[a]}),Object.keys(e).length?React.createElement(PanelButton,{key:b,tabIndex:b,parent:this,preset:e}):null},_registerPanelContent:function(a){var b="undefined"!=typeof a.props.toolbar,c=a.props.toolbarState||(b?"visible":"none");a.props._panelId=this._id;var d=Panel._setPanelContent(a),e=this._childrenList.push(d)-1;return{index:e,toolbar:c,padding:Boolean(!a.props.noPadding),state:"visible",id:d}},addPanelContent:function(a,b){var c=this.state,d=this._registerPanelContent(a);c.tabList[d.index]=d,c.tabCount=this._getTabCount(c.tabList),b&&(c.tabIndex=d.index),this.setState(c)},removePanelContent:function(a,b){var c,d=this.state,e=b?"hidden":"none",f=0;("undefined"==typeof a||null==a)&&(a=d.tabIndex),c=a==d.tabIndex,d.tabList[a].state=e;var g=d.tabIndex;if(c){for(f=a+1;f<d.tabList.length;++f)if("visible"==d.tabList[f].state){g=f;break}if(g==a)for(f=a;--f>=0;)if("visible"==d.tabList[f].state){g=f;break}}d.tabCount=this._getTabCount(d.tabList),d.tabIndex=g,this.setState(d)},_getValidTabIndex:function(a,b){var c,d=this.state,e=-1;for(("undefined"==typeof a||null==a)&&(a=d.tabIndex),c=b?a+1:a;c<d.tabList.length;++c)if("visible"==d.tabList[c].state&&null!=this._childrenList[c]){e=c;break}if(-1==e)for(c=a;--c>=0;)if("visible"==d.tabList[c].state&&null!=this._childrenList[c]){e=c;break}return e},restorePanelContent:function(a,b){var c=this.state,d="visible";c.tabList[a].state=d,(b||c.tabList[c.tabIndex].state!=d)&&(c.tabIndex=a),this.setState(c)},getPanelContentAt:function(a){var b=this._childrenList[a];return null==b?!1:Panel.getPanelContent(b)},_getPanelContentAt:function(a){var b=this._childrenList[a];return null==b?!1:Panel._getPanelContent(b)},setActivePanelContent:function(a){this.setState({tabIndex:a||0})},getActivePanelContent:function(){return this.getPanelContentAt(this.state.tabIndex)},_getActivePanelContent:function(){return this.state.tabCount?this._getPanelContentAt(this.state.tabIndex):this.props.emptyPanelContent},getPanelContentList:function(a,b,c,d,e){var f=this,g=[];return Object.keys(Panel._panelContentObjectList).forEach(function(h){var i=f._childrenList.indexOf(Number(h));if(!e||-1!=i){var j=Panel._panelContentObjectList[h];!(d&&!j.isActive()||!c&&j.isRemoved()||!b&&j.isHidden()||!(a||j.isRemoved()||j.isHidden())||!g.push(j))}}),g},_childrenList:[],_id:null,_eventStack:null,statics:{_register:function(a){return Panel._panelList.push(a)-1},getPanel:function(a){return Panel._panelList[a]||!1},getPanelByName:function(a){for(var b=0;b<Panel._panelList.length;++b){var c=Panel.getPanel(b);if(c&&c.getName()==String(a))return c}return!1},_getPanelContent:function(a){return Panel._panelContentList[a]||!1},getPanelContent:function(a){return Panel._panelContentObjectList[a]||!1},_setPanelContent:function(a){var b=null;return null!=a.props._id?(b=Number(a.props._id),Panel._panelContentList[b]=a):(b=Panel._panelContentList.length,Panel._panelContentList[b]=React.createElement(PanelContent,React.__spread({},a.props,{_id:b}))),b},_setPanelContentObject:function(a){var b=Number(a.getId());return Panel._panelContentObjectList[b]=a,b},movePanelContent:function(a,b,c,d){var e=Panel.getPanelContent(a),f=Panel.getPanel(b),g=e.getPanel(),h=e.getIndex();if(b!=g.getId()){d="undefined"==typeof d||null==d?f._childrenList.push(a)-1:d;var i=g.state.tabList[h],j={index:d,toolbar:i.toolbar,padding:i.padding,state:i.state,id:a};g._childrenList[h]=null,e.props._panelId=b,e.props._index=d;var k=f.state;k.tabList[d]=j,k.tabCount=f._getTabCount(k.tabList),k.tabIndex=c?d:k.tabIndex,f.setState(k),g.setState({tabCount:g._getTabCount(),tabIndex:g._getValidTabIndex(null,g.state.tabIndex==h)})}},getPanelList:function(){for(var a=[],b=0;b<Panel._panelList.length;++b){var c={id:b,name:Panel.getPanel(b).getName()};a.push(c)}return a},_panelContentList:[],_panelContentObjectList:[],_panelList:[]}}),PanelTab=React.createClass({displayName:"PanelTab",getDefaultProps:function(){return{icon:"",title:"",index:0,selected:!1,showTitle:!0}},handleClick:function(a){a.preventDefault(),this.props.onClick(this)},render:function(){var a=null,b=this.props.showTitle&&this.props.title.length?React.createElement("span",{className:"rpanel-title"},this.props.title):React.createElement("span",{className:"rpanel-title rpanel-no-title"}),c=this.props.index==this.props.selected?"rpanel-tab active":"rpanel-tab";return c+=" "+this.props.state,this.props.icon&&(a=React.createElement("span",{className:"rpanel-icon"},React.createElement("i",{className:this.props.icon}))),React.createElement("li",{className:c,onClick:this.handleClick},React.createElement("a",{href:"#",title:this.props.title},a," ",b))}}),PanelContent=React.createClass({displayName:"PanelContent",getDefaultProps:function(){var a={noPadding:!1,_panelId:null,_index:null,_id:null,title:"",icon:!1};return a},getInitialState:function(){return Panel._setPanelContentObject(this),{}},updateProps:function(a){this.setProps(a)},getPanel:function(){return null!=this.props._panelId?Panel.getPanel(this.props._panelId):(console.error("This PanelContent is not attached to any Panel."),!1)},getId:function(){return Number(this.props._id)},getIndex:function(){return Number(this.props._index)},isHidden:function(){return"hidden"==this.props.visibility},isRemoved:function(){return"none"==this.props.visibility},isActive:function(){return this.props.display},setActive:function(){this.getPanel().setActivePanelContent(this.getIndex())},hide:function(){this.getPanel().removePanelContent(this.getIndex(),!0)},remove:function(){this.getPanel().removePanelContent(this.getIndex(),!1)},restore:function(a){this.getPanel().restorePanelContent(this.getIndex(),a||!1)},isToolbarActive:function(){return this.props.showToolbar},setToolbarActive:function(a){this.isToolbarActive()!=a&&this.toggleToolbar()},toggleToolbar:function(){var a=this.getPanel(),b=this.getIndex(),c=a.state.tabList[b].toolbar,d=a.state.tabList;"visible"==c?(d[b].toolbar="hidden",a.setState({tabList:d})):"hidden"==c&&(d[b].toolbar="visible",a.setState({tabList:d}))},getTitle:function(){return this.props.title},setTitle:function(a){this.props.title=a||"",this.getPanel().forceUpdate()},getIcon:function(){return this.props.icon},setIcon:function(a){this.props.icon=a||!1,this.getPanel().forceUpdate()},moveTo:function(a,b,c){var d=this.getId();c="undefined"==typeof c||null==c?null:c,Panel.movePanelContent(d,a,b||!1,c)},render:function(){var a="rpanel-tab-body"+(this.isActive()&&!this.isHidden()?" active":""),b="rpanel-toolbar"+(this.isToolbarActive()?" active":""),c="rpanel-content"+(this.props.noPadding?" no-padding":""),d=this.getId(),e=React.Children.only(this.props.children);return React.isValidElement(this.props.toolbar)&&(this.props.toolbar.props._panelContentId=d),React.isValidElement(e)&&(e.props._panelContentId=d),this.isRemoved()?null:React.createElement("div",{className:a},React.createElement("div",{className:b},this.props.toolbar),React.createElement("div",{className:c},e))}}),PanelButtonMixin={getPanel:function(){return null!=this.props._panelId?Panel.getPanel(this.props._panelId):(console.error("Button "+this.props.identifier+" is not attached to any Panel."),!1)},isActive:function(){return this.props._active},isEnabled:function(){return!this.props._disabled},isValidEvent:function(a){var b="undefined"!=typeof a.nativeEvent?a.nativeEvent:a,c=this.getDOMNode().dataset.reactid,d="undefined"!=typeof b.origin,e=!0;return d?e=b.origin!=c:b.origin=c,e},componentDidMount:function(){this.props._parentControl.attach(this)}},PanelButtonOpenableMixin={_isListeningToOutsideClick:!1,getInitialState:function(){return{open:!1}},handleClickOnControl:function(a){this.isValidEvent(a)&&(this.state.open?this._isListeningToOutsideClick&&(this._isListeningToOutsideClick=!1,window.removeEventListener("click",this.handleClickOnControl)):(this._isListeningToOutsideClick=!0,window.addEventListener("click",this.handleClickOnControl)),this.setState({open:!this.state.open}))}},PanelControl=React.createClass({displayName:"PanelControl",_childObject:!1,propTypes:{children:React.PropTypes.element.isRequired},getInitialState:function(){return this._childObject=!1,{}},applyPreset:function(a){var b=this,c={identifier:"",active:!1,disabled:!1,hiddenOnFullscreen:!1,onClick:function(){},className:""};Object.keys(c).forEach(function(d){var e=c[d];"undefined"!=typeof b.props[d]?e=b.props[d]:"undefined"!=typeof a[d]&&(e=a[d]),b.props[d]=e}),b.props._active="function"==typeof b.props.active?b.props.active(b):b.props.active,b.props._disabled="function"==typeof b.props.disabled?b.props.disabled(b):b.props.disabled},getPanel:function(){return Panel.getPanel(this.props._panelId)},attach:function(a){this._childObject=a},handleClick:function(a){var b=!1;0!=this._childObject&&"function"==typeof this._childObject.handleClickOnControl&&(this._childObject.handleClickOnControl(a),b=!0),b||"function"==typeof this.props.onClick&&this.props.onClick(a,this._childObject||this)},render:function(){this.applyPreset(this.props.preset||{});var a="rpanel-control"+(this.props.className.length?" "+this.props.className:"")+(this.props._active?" active":"")+(this.props._disabled?" disabled":"")+(this.props.hiddenOnFullscreen&&"fullscreen"==this.getPanel().state.state?" hidden":""),b=React.Children.only(this.props.children);return React.isValidElement(b)&&(b.props._panelId=Number(this.props._panelId),b.props._active=this.props._active,b.props._disabled=this.props._disabled,b.props._parentControl=this),React.createElement("div",{className:a,onClick:this.handleClick},this.props.children)}}),PanelButton=React.createClass({displayName:"PanelButton",mixins:[PanelButtonMixin],applyPreset:function(a){var b=this,c={identifier:"close",icon:"fa fa-times",title:"Close",showContent:!1,button:function(a){return React.createElement("a",{href:"#",className:"rpanel-button",title:a.props.title},React.createElement("i",{className:a.props.icon}))},onClick:function(){},className:""};Object.keys(c).forEach(function(d){var e=c[d];"undefined"!=typeof b.props[d]?e=b.props[d]:"undefined"!=typeof a[d]&&(e=a[d]),b.props[d]=e})},handleClickOnControl:function(a){this.isValidEvent(a)&&"function"==typeof this.props.onClick&&this.props.onClick(a,this)},render:function(){this.applyPreset(this.props.preset||{});var a=this.props.button(this);return React.createElement("div",null,a)}});
//# sourceMappingURL=react-panels.min.js.map